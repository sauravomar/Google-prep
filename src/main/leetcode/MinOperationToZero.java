package main.leetcode;

import java.util.HashMap;
import java.util.Map;

public class MinOperationToZero {

    Map<String, Integer> map = new HashMap<>();

    public int minOperations(int[] nums, int x) {

        if (nums.length == 0 || x == 0) return 0;
        int ans = solve(nums, x, 0, nums.length - 1, 0);
        return ans >= Integer.MAX_VALUE ? -1 : ans;

    }

    private int solve(int number[], int x, int left, int right, int count) {
        if (x == 0) return count;
        if (x < 0 || left > right) return Integer.MAX_VALUE;
        StringBuilder sb = new StringBuilder();
        String key = sb.append(left) + "*" + sb.append(right) + "*" + sb.append(x);
        if (map.containsKey(key)) return map.get(key);

        int l = solve(number, x - number[left], left + 1, right, count + 1);
        int r = solve(number, x - number[right], left, right - 1, count + 1);
        map.put(key, Math.min(l, r));
        return map.get(key);
    }

    public static void main(String[] args) {
        int arr[] = new int []{

        } ;


        System.out.println(new MinOperationToZero().minOperations(arr, 768527557));
    }
}
